{"version":3,"sources":["../../src/context.js","../../src/interceptors.js","../../src/empty.js","../../src/common/ruleValidate.js","../../src/common/Field.js","../../src/common/TaskQueue.js","../../src/useFormEvent/validateAllFieldsCreator.js","../../src/useFormEvent/index.js","../../src/useFormEvent/fieldAddCreator.js","../../src/useFormEvent/fieldEditCreator.js","../../src/useFormEvent/fieldRemoveCreator.js","../../src/useFormEvent/fieldValidateCreator.js","../../src/useFormEvent/fieldDataChangeCreator.js","../../src/useFormEvent/dataSetCreator.js","../../src/useFormEvent/dataResetCreator.js","../../src/useFormEvent/dataSetFieldCreator.js","../../src/useFormEvent/submitCreator.js","../../src/RULES.js","../../src/Group/context.js","../../src/Group/GroupRoot.js","../../src/Group/index.js","../../src/Form/index.js","../../src/Form/useFormState.js","../../src/Form/useOpenApi.js","../../src/useField/useFieldInit.js","../../src/useField/getFieldValue.js","../../src/useField/compileErrMsg.js","../../src/useField/index.js","../../src/useField/useValidate.js","../../src/useField/useFieldDataChange.js","../../src/Group/GroupList.js","Example/Simple.js","../../src/useSubmit.js","App.js","webpack:///./src/index.js?b635"],"names":["context","createContext","Provider","useFormContext","Consumer","useContext","interceptors","input","output","name","exec","func","baseInterceptors","runInterceptors","type","names","Array","currentInterceptors","_uniqBy","_get","value","compose","isNotEmpty","isPlainObject","values","getValues","item","isArray","isNaN","filterEmpty","Object","key","current","ruleValidate","a","getFormData","field","result","errMsg","rules","str","currentRule","formRules","emptyRes","res","console","constructor","this","setInfo","fieldRef","deleteValue","setValue","clone","setValidateStatus","msg","status","runValidate","rule","validate","complete","Promise","runner","resolve","cancel","isCancel","append","proxyTaskComplete","Proxy","taskConfig","apply","target","index","task","currentTask","queue","find","id","currentIndex","indexOf","validateAllFieldsCreator","emitter","formStateRef","taskQueue","useFormEvent","initDataRef","props","useEvent","debug","emitterRef","useRef","otherProps","propsRef","usePropsRef","useEffect","setFormState","fieldAddCreator","groupName","groupIndex","label","interceptor","noTrim","_last","fieldEditCreator","state","fieldRemoveCreator","setFieldInfo","trimValue","formDataRef","fieldValidateCreator","fieldDataChangeCreator","validateAllFields","newField","targetIndex","data","dataSetCreator","dataResetCreator","dataSetFieldCreator","args","onSubmit","formState","isPassRef","errors","onError","formData","onPrevSubmit","e","submitCreator","RULES","REQ","TEL","test","EMAIL","LEN","end","Number","start","useGroupContext","GroupRoot","children","groupId","useMemo","Symbol","uniqueId","useState","sub1","parentId","setGroupMap","oldGroupMap","newGroupMap","newList","sub2","groupMap","Group","parentName","parentIndex","isEmit","emit","formIsMount","useGroup","Form","forwardRef","fields","isPass","fieldValue","set","setState","useFormState","noFilter","setFormIsMount","openApi","submit","reset","onReady","callback","onDestroy","validateField","setFieldValidate","useOpenApi","useImperativeHandle","ref","getFieldValue","event","window","isEvent","compileErrMsg","useField","debounce","time","_group","useFieldInit","checkValidate","useDebouncedCallback","subscription","debouncedCheckValidate","useValidate","onChange","isValueChanged","setIsValueChanged","useFieldDataChange","dataChange","triggerValidate","errState","GroupList","setList","sub","onAdd","useCallback","list","onRemove","empty","Input","fieldProps","onBlur","SubmitButton","setIsLoading","isLoading","onClick","useSubmit","Simple","groupListRef","groupListRef2","formRef","RULE","log","abc","field1","field2","field3","error","setTimeout","JSON","stringify","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fdf21b11.chunk.js","sourcesContent":["import { createContext, useContext } from 'react';\n\nconst context = createContext({});\n\nexport default context;\nexport const { Provider, Consumer } = context;\nexport const useFormContext = () => useContext(context);\n","import compose from '@kne/compose';\nimport _get from 'lodash/get';\nimport _uniqBy from 'lodash/uniqBy';\n\nconst interceptors = {\n  input: [],\n  output: []\n};\n\ninterceptors.input.use = (name, func) => {\n  return interceptors.input.push({\n    name,\n    exec: func\n  });\n};\n\ninterceptors.output.use = (name, func) => {\n  return interceptors.output.push({\n    name,\n    exec: func\n  });\n};\n\nexport default interceptors;\n\nconst baseInterceptors = interceptors;\n\nexport const runInterceptors = (interceptors, type, names) => {\n  if (!Array.isArray(names)) {\n    names = [names];\n  }\n\n  const currentInterceptors = _uniqBy(\n    baseInterceptors[type]\n      .concat(_get(interceptors, type, []))\n      .filter(({ name }) => names.indexOf(name) > -1)\n      .reverse(),\n    ({ name }) => name\n  );\n\n  if (currentInterceptors.length === 0) {\n    return value => value;\n  }\n  return compose(...currentInterceptors.map(({ exec }) => exec));\n};\n","import isPlainObject from 'lodash/isPlainObject';\nimport getValues from 'lodash/values';\nimport isArray from 'lodash/isArray';\n\nexport const isNotEmpty = value => {\n  if (isPlainObject(value)) {\n    const values = getValues(value);\n    return values.length > 0 && values.some(item => !!item);\n  } else if (isArray(value)) {\n    return value.length > 0;\n  } else if (typeof value === 'number') {\n    return !isNaN(value);\n  } else {\n    return !(value === undefined || value === null || value === '' || value.length === 0);\n  }\n};\n\nexport const isEmpty = value => !isNotEmpty(value);\n\nexport const filterEmpty = (value = {}) => {\n  if (isArray(value)) {\n    return value.map(item => filterEmpty(item));\n  }\n  if (isPlainObject(value)) {\n    const output = {};\n    Object.keys(value).forEach(key => {\n      const current = filterEmpty(value[key]);\n      if (isNotEmpty(current)) {\n        output[key] = current;\n      }\n    });\n    return output;\n  }\n  return value;\n};\n","const ruleValidate = async ({ field, value, formRules, getFormData }) => {\n  if (typeof field.rule === 'function') {\n    return await field.rule(value);\n  }\n  if (typeof field.rule === 'object' && field.rule instanceof RegExp) {\n    return {\n      result: field.rule.test(value),\n      errMsg: ''\n    };\n  }\n  if (typeof field.rule === 'string') {\n    const rules = field.rule.split(' ').filter(str => str.length > 0);\n    for (let currentRule of rules) {\n      let [key, ...args] = currentRule.split('-');\n      const exec = formRules[key.toUpperCase()];\n      if (typeof exec === 'function') {\n        //空值处理 如果不为REQ规则的规则REQ判断不通过返回正确\n        if (currentRule !== 'REQ') {\n          const emptyRes = formRules['REQ'](value, ...args, getFormData());\n          if (emptyRes.result !== true) {\n            return {\n              result: true,\n              errMsg: ''\n            };\n          }\n        }\n\n        const res = await exec(value, ...args, getFormData());\n        if (res.result !== true) {\n          return {\n            result: false,\n            errMsg: res.errMsg\n          };\n        }\n      } else {\n        console.error(`校验规则${currentRule}不在当前form的rules里面，请确认${field.name}的校验规则${field.rule}是否正确`);\n      }\n    }\n  }\n  return {\n    result: true,\n    errMsg: ''\n  };\n};\n\nexport default ruleValidate;\n","/**\n * 重新设计form的state，简化验证时执行效率问题\n * state\n * - field\n * - id 唯一性id\n * - name 字段名称 可以支持 company.name 和 company[\"name\"] 格式的 name\n * - groupName 分组的名称 可以支持 company.name 和 company[\"name\"] 格式的 name\n * - groupIndex 分组的Index\n * - label 字段名称\n * - rule 验证规则字符串\n * - interceptor 拦截器\n * - noTrim 是否去掉两端空格\n * - fieldRef 字段引用\n * */\nimport clone from 'lodash/clone';\nimport ruleValidate from './ruleValidate';\n\nclass Field {\n  constructor({ id, name }) {\n    this.id = id;\n    this.name = name;\n    this.isPass = false;\n  }\n\n  setInfo({ groupName, groupIndex, label, rule, interceptor, noTrim, fieldRef }) {\n    this.groupName = groupName;\n    this.groupIndex = groupIndex;\n    this.label = label;\n    this.rule = rule;\n    this.interceptor = interceptor;\n    this.noTrim = noTrim;\n    this.fieldRef = fieldRef;\n    return this;\n  }\n\n  deleteValue() {\n    delete this.value;\n    return this;\n  }\n\n  setValue(value) {\n    this.value = value;\n    return this;\n  }\n\n  clone() {\n    return clone(this);\n  }\n\n  setValidateStatus({ status, msg = '' }) {\n    this.validate = {\n      status,\n      msg\n    };\n    return this;\n  }\n\n  async runValidate(rules, getFormData) {\n    const validate = await ruleValidate({\n      field: {\n        name: this.name,\n        rule: this.rule\n      },\n      value: this.value,\n      formRules: rules,\n      getFormData\n    });\n    this.isPass = validate.result;\n    this.validate = {\n      status: validate.result === true ? 1 : 2,\n      msg: validate.errMsg\n    };\n    return this;\n  }\n}\n\nexport default Field;\n","export class Task {\n  constructor({ id, runner, complete }) {\n    this.id = id;\n    this.isCancel = false;\n    this.target = Promise.race([\n      Promise.resolve(runner()),\n      new Promise(resolve => {\n        this.resolve = resolve;\n      })\n    ]).then(res => {\n      if (this.isCancel) {\n        return new Promise(() => {\n          // 返回 <pending> 状态的promise对象阻止后续的then回调触发\n        });\n      }\n      return res;\n    });\n    this.target.then((...args) => {\n      return Promise.resolve(complete(...args));\n    });\n  }\n\n  cancel(...args) {\n    if (this.isCancel === true) {\n      return;\n    }\n    this.isCancel = true;\n    this.resolve(...args);\n  }\n}\n\nexport class TaskQueue {\n  constructor() {\n    this.queue = [];\n  }\n\n  append(taskConfig) {\n    const proxyTaskComplete = new Proxy(taskConfig.complete, {\n      apply: (target, thisArg, argumentsList) => {\n        const res = target.apply(thisArg, argumentsList);\n        const index = this.queue.indexOf(task);\n        this.queue.splice(index, 1);\n        return res;\n      }\n    });\n    taskConfig.complete = proxyTaskComplete;\n    const task = new Task(taskConfig);\n\n    const currentTask = this.queue.find(({ id }) => task.id === id);\n    if (currentTask) {\n      const currentIndex = this.queue.indexOf(currentTask);\n      currentTask.cancel();\n      this.queue.splice(currentIndex, 1);\n    }\n    this.queue.push(task);\n  }\n}\n\nexport default TaskQueue;\n","const validateAllFieldsCreator =\n  ({ formStateRef, taskQueue, emitter }) =>\n  () => {\n    Object.values(formStateRef.current).forEach(field => {\n      emitter.emit('form-field-validate', { id: field.id });\n    });\n    return Promise.all(taskQueue.queue.map(task => task.target));\n  };\n\nexport default validateAllFieldsCreator;\n","import { useEffect, useRef } from 'react';\nimport useEvent from '@kne/use-event';\nimport fieldAddCreator from './fieldAddCreator';\nimport fieldEditCreator from './fieldEditCreator';\nimport fieldRemoveCreator from './fieldRemoveCreator';\nimport { TaskQueue } from '../common/TaskQueue';\nimport fieldValidateCreator from './fieldValidateCreator';\nimport fieldDataChangeCreator from './fieldDataChangeCreator';\nimport dataSetCreator from './dataSetCreator';\nimport dataResetCreator from './dataResetCreator';\nimport dataSetFieldCreator from './dataSetFieldCreator';\nimport submitCreator from './submitCreator';\n\nconst usePropsRef = props => {\n  const propsRef = useRef({});\n  Object.keys(props).forEach(name => {\n    propsRef.current[name] = props[name];\n  });\n  return propsRef;\n};\n\nconst useFormEvent = ({ debug, formStateRef, formDataRef, isPassRef, initDataRef, ...props }) => {\n  const emitter = useEvent({ debug, name: 'react-form' });\n  const emitterRef = useRef(emitter);\n  emitterRef.current = emitter;\n\n  const otherProps = usePropsRef(props);\n  otherProps.current = props;\n\n  useEffect(() => {\n    const emitter = emitterRef.current;\n    const setFormState = otherProps.current.setFormState;\n    const taskQueue = new TaskQueue();\n    emitter.addListener('form-field-add', fieldAddCreator({ formStateRef, setFormState }));\n    emitter.addListener('form-field-edit', fieldEditCreator({ formStateRef, setFormState, initDataRef, otherProps }));\n    emitter.addListener('form-field-remove', fieldRemoveCreator({ formStateRef, setFormState }));\n    emitter.addListener(\n      'form-field-validate',\n      fieldValidateCreator({\n        formStateRef,\n        formDataRef,\n        setFormState,\n        otherProps,\n        taskQueue,\n        emitter\n      })\n    );\n    emitter.addListener('form-field-data-change', fieldDataChangeCreator({ formStateRef, setFormState }));\n    emitter.addListener(\n      'form-data-set',\n      dataSetCreator({\n        setFormState,\n        formStateRef,\n        initDataRef,\n        otherProps,\n        taskQueue,\n        emitter\n      })\n    );\n    emitter.addListener('form-data-reset', dataResetCreator({ initDataRef, setFormState, formStateRef }));\n    emitter.addListener('form-data-set-field', dataSetFieldCreator({ setFormState, formStateRef, otherProps }));\n    emitter.addListener(\n      'form-submit',\n      submitCreator({\n        formStateRef,\n        formDataRef,\n        isPassRef,\n        taskQueue,\n        otherProps,\n        emitter\n      })\n    );\n    return () => {\n      emitter.removeAllListeners();\n    };\n  }, [formStateRef, initDataRef, otherProps]);\n\n  return emitter;\n};\n\nexport default useFormEvent;\n","import Field from '../common/Field';\n\nconst fieldAddCreator =\n  ({ formStateRef, setFormState }) =>\n  ({ id, name }) => {\n    const field = new Field({ id, name });\n    setFormState(Object.assign({}, formStateRef.current, { [id]: field }));\n  };\n\nexport default fieldAddCreator;\n","import { runInterceptors } from '../interceptors';\nimport _last from 'lodash/last';\nimport _get from 'lodash/get';\n\nconst fieldEditCreator =\n  ({ formStateRef, setFormState, initDataRef, otherProps }) =>\n  ({ id, name, rule, label, interceptor, value, noTrim, groupName, groupIndex, fieldRef }) => {\n    const field = formStateRef.current[id].clone();\n    field.setInfo({ groupName, groupIndex, label, rule, interceptor, noTrim, fieldRef });\n\n    field.setValue(\n      runInterceptors(\n        otherProps.current.interceptors,\n        'input',\n        interceptor\n      )(\n        value ||\n          (() => {\n            if (groupName && _last(groupName.split('.')) === name) {\n              return _get(initDataRef.current, `${groupName}[\"${groupIndex}\"]`);\n            }\n            if (groupName) {\n              return _get(initDataRef.current, `${groupName}[\"${groupIndex}\"].${name}`);\n            }\n            return _get(initDataRef.current, name);\n          })()\n      )\n    );\n\n    setFormState(Object.assign({}, formStateRef.current, { [id]: field }));\n  };\n\nexport default fieldEditCreator;\n","const fieldRemoveCreator =\n  ({ formStateRef, setFormState }) =>\n  ({ id }) => {\n    const state = Object.assign({}, formStateRef.current);\n    delete state[id];\n    setFormState(state);\n  };\n\nexport default fieldRemoveCreator;\n","const fieldValidateCreator = ({ formStateRef, formDataRef, setFormState, otherProps, taskQueue, emitter }) => {\n  const setFieldInfo = field => {\n    setFormState(Object.assign({}, formStateRef.current, { [field.id]: field }));\n  };\n  return ({ id }) => {\n    const field = formStateRef.current[id].clone();\n    field.setValidateStatus({ status: 3 });\n    setFieldInfo(field);\n\n    //处理空格的情况\n    let trimValue = field.value;\n    if (typeof field.value === 'string' && field.noTrim !== true) {\n      trimValue = field.value.trim();\n      if (field.value !== trimValue) {\n        emitter.emit('form-field-data-change', { id, value: trimValue });\n      }\n    }\n    //添加任务\n    taskQueue.append({\n      id,\n      runner: () => {\n        return field.runValidate(otherProps.current.rules, () => formDataRef.current);\n      },\n      complete: () => {\n        setFieldInfo(field);\n        emitter.emit('form-field-validate-complete', {\n          id,\n          name: field.name,\n          value: trimValue,\n          index: field.groupIndex,\n          validate: field.validate\n        });\n      }\n    });\n  };\n};\n\nexport default fieldValidateCreator;\n","const fieldDataChangeCreator = ({ formStateRef, setFormState }) => {\n  const setFieldInfo = field => {\n    setFormState(Object.assign({}, formStateRef.current, { [field.id]: field }));\n  };\n  return ({ id, value }) => {\n    const field = formStateRef.current[id].clone();\n    field.setValue(value);\n    field.setValidateStatus({ status: 0 });\n\n    setFormState(Object.assign({}, formStateRef.current, { [id]: field }));\n  };\n};\n\nexport default fieldDataChangeCreator;\n","import _last from 'lodash/last';\nimport _get from 'lodash/get';\nimport { runInterceptors } from '../interceptors';\nimport validateAllFieldsCreator from './validateAllFieldsCreator';\n\nconst dataSetCreator = ({ setFormState, formStateRef, initDataRef, otherProps, taskQueue, emitter }) => {\n  const validateAllFields = validateAllFieldsCreator({ formStateRef, taskQueue, emitter });\n  return ({ data, runValidate = true }) => {\n    initDataRef.current = data;\n    const output = {};\n    Object.values(Object.assign({}, formStateRef.current)).forEach(field => {\n      const newField = field.clone();\n      const groupName = newField.groupName,\n        targetIndex = newField.groupIndex,\n        name = newField.name;\n      const value = (() => {\n        if (groupName && _last(groupName.split('.')) === name) {\n          return _get(data, `${groupName}[${targetIndex}]`);\n        }\n        if (groupName) {\n          return _get(data, `${groupName}[${targetIndex}].${name}`);\n        }\n        return _get(data, name);\n      })();\n      newField.setValue(runInterceptors(otherProps.current.interceptors, 'input', field.interceptor)(value));\n      output[newField.id] = newField;\n    });\n    setFormState(output);\n    runValidate && validateAllFields();\n  };\n};\n\nexport default dataSetCreator;\n","const dataResetCreator =\n  ({ initDataRef, setFormState, formStateRef }) =>\n  () => {\n    initDataRef.current = {};\n    const data = Object.assign({}, formStateRef.current);\n    const output = {};\n    Object.keys(data).forEach(item => {\n      const field = item.clone();\n      field.deleteValue();\n      output[item.id] = field;\n    });\n    setFormState(output);\n  };\n\nexport default dataResetCreator;\n","import { runInterceptors } from '../interceptors';\n\nconst dataSetFieldCreator =\n  ({ setFormState, formStateRef, otherProps }) =>\n  ({ name, groupName, groupIndex, value }) => {\n    const data = Object.assign({}, formStateRef.current);\n    if (groupName) {\n      const field = data.find(field => field.name === name && field.groupName === groupName && field.groupIndex === groupIndex);\n      data[field.id] = field.clone().setValue(runInterceptors(otherProps.current.interceptors, 'input', field.interceptor)(value));\n    } else {\n      const field = data.find(field => field.name === name);\n      data[field.id] = field.clone().setValue(runInterceptors(otherProps.current.interceptors, 'input', field.interceptor)(value));\n    }\n    setFormState(data);\n  };\n\nexport default dataSetFieldCreator;\n","import validateAllFieldsCreator from './validateAllFieldsCreator';\n\nconst submitCreator = ({ formStateRef, formDataRef, isPassRef, taskQueue, otherProps, emitter }) => {\n  const validateAllFields = validateAllFieldsCreator({ formStateRef, taskQueue, emitter });\n  return args => {\n    if (!Array.isArray(args)) {\n      args = [args];\n    }\n    const { onPrevSubmit, onError, onSubmit } = otherProps.current;\n    validateAllFields()\n      .then(async () => {\n        const formState = formStateRef.current;\n        const isPass = isPassRef.current;\n        if (!isPass) {\n          const errors = Object.values(formState)\n            .filter(field => {\n              return field.validate.status === 2;\n            })\n            .map(field =>\n              Object.assign({}, field.validate, {\n                name: field.name,\n                groupName: field.groupName,\n                fieldRef: field.fieldRef,\n                groupIndex: field.groupIndex\n              })\n            );\n          emitter.emit('form-submit-error', errors);\n          onError && (await onError(errors, ...args));\n          return false;\n        }\n        const formData = formDataRef.current;\n        emitter.emit('form-prev-submit');\n        if (onPrevSubmit && (await onPrevSubmit(formData, ...args)) === false) {\n          emitter.emit('form-prev-submit-error');\n          return false;\n        }\n        onSubmit && (await onSubmit(formData, ...args));\n        emitter.emit('form-submit-success', formData);\n        return true;\n      })\n      .then(\n        res => {\n          emitter.emit('form-submit-end', res);\n        },\n        e => {\n          console.error(e);\n          emitter.emit('form-error', e);\n        }\n      )\n      .then(() => {\n        emitter.emit('form-submit-complete');\n      });\n  };\n};\n\nexport default submitCreator;\n","import { isNotEmpty } from './empty';\n\nconst RULES = {\n  REQ: function (value) {\n    return {\n      result: isNotEmpty(value),\n      errMsg: ''\n    };\n  },\n  TEL: function (value) {\n    return {\n      result: /^1[0-9]{10}$/.test(value),\n      errMsg: '请输入有效的手机号'\n    };\n  },\n  EMAIL: function (value) {\n    return {\n      result: /^([a-zA-Z0-9_.-])+@(([a-zA-Z0-9-])+\\.)+([a-zA-Z0-9]{2,4})+$/.test(value),\n      errMsg: '请输入有效的邮箱'\n    };\n  },\n  LEN: function (value, start, end) {\n    value = value.toString();\n    if (end === start && value.length !== Number(end)) {\n      return {\n        result: false,\n        errMsg: `%s长度必须等于${end}`\n      };\n    }\n    if (value.length < start) {\n      return {\n        result: false,\n        errMsg: `%s长度必须大于${start}`\n      };\n    }\n    if (end && value.length > end) {\n      return {\n        result: false,\n        errMsg: `%s长度必须小于${end}`\n      };\n    }\n    return { result: true };\n  }\n};\nexport default RULES;\nexport const presetRules = (newRules = {}) => {\n  Object.assign(RULES, newRules);\n};\n","import { createContext, useContext } from 'react';\n\nconst context = createContext();\n\nexport const { Provider } = context;\n\nexport const useGroupContext = () => {\n  return useContext(context);\n};\n\nexport default context;\n","import React, { useMemo, useEffect, useState } from 'react';\nimport uniqueId from 'lodash/uniqueId';\nimport { Provider } from './context';\nimport { useFormContext } from '../context';\n\nconst GroupRoot = ({ children }) => {\n  const groupId = useMemo(() => Symbol(uniqueId(`group_`)), []);\n  const [groupMap, setGroupMap] = useState({});\n  const { emitter } = useFormContext();\n  useEffect(() => {\n    const sub1 = emitter.addListener('form-group-add', ({ id, parentId }) => {\n      setGroupMap(oldGroupMap => {\n        const newGroupMap = Object.assign({}, oldGroupMap);\n        if (!newGroupMap[parentId]) {\n          newGroupMap[parentId] = [];\n        }\n        const newList = newGroupMap[parentId].slice(0);\n        newList.push(id);\n        newGroupMap[parentId] = newList;\n        return newGroupMap;\n      });\n    });\n    const sub2 = emitter.addListener('form-group-remove', ({ id, parentId }) => {\n      setGroupMap(oldGroupMap => {\n        const newGroupMap = Object.assign({}, oldGroupMap);\n        const newList = newGroupMap[parentId].slice(0);\n        const index = newList.indexOf(id);\n        newList.splice(index, 1);\n        newGroupMap[parentId] = newList;\n        return newGroupMap;\n      });\n    });\n    return () => {\n      sub1.remove();\n      sub2.remove();\n    };\n  }, [emitter]);\n  return <Provider value={{ id: groupId, groupMap }}>{children}</Provider>;\n};\n\nexport default GroupRoot;\n","import React, { useEffect, useMemo } from 'react';\nimport { Provider, useGroupContext } from './context';\nimport { useFormContext } from '../context';\nimport uniqueId from 'lodash/uniqueId';\nimport _get from 'lodash/get';\n\nconst Group = ({ name, children }) => {\n  const { formIsMount, emitter } = useFormContext();\n  const groupId = useMemo(() => Symbol(uniqueId(`group_`)), []);\n  const { id: parentId, index: parentIndex, groupMap, name: parentName } = useGroupContext();\n\n  const index = useMemo(() => {\n    return _get(groupMap, parentId, []).indexOf(groupId);\n  }, [groupId, parentId, groupMap]);\n\n  const groupName = useMemo(() => {\n    if (index > -1 && parentName) {\n      return `${parentName}[${parentIndex}].${name}`;\n    }\n    return name;\n  }, [parentName, name, index, parentIndex]);\n\n  useEffect(() => {\n    let isEmit = false;\n    if (formIsMount) {\n      isEmit = true;\n      emitter.emit('form-group-add', { id: groupId, parentId });\n    }\n    return () => {\n      isEmit && emitter.emit('form-group-remove', { id: groupId, parentId });\n    };\n  }, [formIsMount, emitter, groupId, parentId]);\n  return <Provider value={{ id: groupId, name: groupName, groupMap, index }}>{children}</Provider>;\n};\n\nexport default Group;\n\nexport { default as GroupRoot } from './GroupRoot';\n\nexport const useGroup = useGroupContext;\n","import React, { forwardRef, useRef, useState, useEffect, useImperativeHandle } from 'react';\nimport { Provider } from '../context';\nimport useFormState from './useFormState';\nimport useFormEvent from '../useFormEvent';\nimport useOpenApi from './useOpenApi';\nimport RULES from '../RULES';\nimport { GroupRoot } from '../Group';\n\nconst Form = forwardRef((props, ref) => {\n  const { formState, formStateRef, formData, fields, isPass, isPassRef, formDataRef, setFormState } = useFormState(props);\n  const initDataRef = useRef(props.data);\n\n  const [formIsMount, setFormIsMount] = useState(false);\n  const formRules = Object.assign({}, RULES, props.rules);\n  const emitter = useFormEvent({\n    onPrevSubmit: props.onPrevSubmit,\n    rules: formRules,\n    interceptors: props.interceptors,\n    noFilter: props.noFilter,\n    onError: props.onError,\n    onSubmit: props.onSubmit,\n    debug: props.debug,\n    formState,\n    formStateRef,\n    formData,\n    isPassRef,\n    formDataRef,\n    setFormState,\n    initDataRef\n  });\n  const emitterRef = useRef(emitter);\n  emitterRef.current = emitter;\n\n  useEffect(() => {\n    setFormIsMount(true);\n    initDataRef.current && emitterRef.current.emit('form-data-set', { data: initDataRef.current });\n    emitterRef.current.emit('form-mount');\n    return () => {\n      emitterRef.current.emit('form-unmount');\n    };\n  }, []);\n\n  const openApi = useOpenApi({ emitter, fields, formState, formData, isPass });\n  useImperativeHandle(ref, () => openApi, [openApi]);\n\n  return (\n    <Provider\n      value={{\n        formState,\n        formData,\n        setFormState,\n        emitter,\n        fields,\n        isPass,\n        formIsMount,\n        initDataRef,\n        openApi\n      }}>\n      <GroupRoot>{props.children}</GroupRoot>\n    </Provider>\n  );\n});\n\nForm.defaultProps = {\n  data: {},\n  debug: false,\n  rules: {},\n  interceptors: {}\n};\n\nexport default Form;\n","import { useState, useRef, useMemo } from 'react';\nimport set from 'lodash/set';\nimport { runInterceptors } from '../interceptors';\nimport _last from 'lodash/last';\nimport { filterEmpty } from '../empty';\n\nconst useFormState = props => {\n  const [state, setState] = useState({});\n  const formStateRef = useRef([]);\n  formStateRef.current = state;\n\n  const propsRef = useRef({});\n  propsRef.current = props;\n\n  const fields = useMemo(() => {\n    return Object.values(state).map(item => {\n      return {\n        field: item.fieldRef,\n        label: item.label,\n        name: item.name,\n        rule: item.rule\n      };\n    });\n  }, [state]);\n  const isPass = useMemo(() => {\n    return Object.values(state).every(field => {\n      return field.isPass;\n    });\n  }, [state]);\n  const isPassRef = useRef(isPass);\n  isPassRef.current = isPass;\n  const formData = useMemo(() => {\n    const output = {};\n    Object.values(state).forEach(field => {\n      const fieldValue = runInterceptors(propsRef.current.interceptors, 'output', field.interceptor)(field.value);\n      if (field.groupName && _last(field.groupName.split('.')) === field.name) {\n        set(output, `${field.groupName}[${field.groupIndex}]`, fieldValue);\n        return;\n      }\n      if (field.groupName) {\n        set(output, `${field.groupName}[${field.groupIndex}].${field.name}`, fieldValue);\n        return;\n      }\n      set(output, field.name, fieldValue);\n    });\n    return props.noFilter ? output : filterEmpty(output);\n  }, [state, props.noFilter]);\n  const formDataRef = useRef({});\n  formDataRef.current = formData;\n  return {\n    fields,\n    isPass,\n    isPassRef,\n    formData,\n    formDataRef,\n    formState: state,\n    formStateRef: formStateRef,\n    setFormState: state => {\n      if (!state) {\n        debugger;\n      }\n      formStateRef.current = state;\n      setState(state);\n    }\n  };\n};\n\nexport default useFormState;\n","import { useMemo } from 'react';\n\nconst useOpenApi = ({ emitter, fields, formState, formData, isPass }) => {\n  return useMemo(() => {\n    return {\n      emitter,\n      submit: (...args) => {\n        emitter.emit('form-submit', args);\n      },\n      get isPass() {\n        return isPass;\n      },\n      get data() {\n        return formData;\n      },\n      get fields() {\n        return fields;\n      },\n      get formState() {\n        return formState;\n      },\n      set data(data) {\n        emitter.emit('form-data-set', { data });\n      },\n      reset() {\n        emitter.emit('form-data-reset');\n      },\n      onReady(callback) {\n        emitter.addListener('form-mount', () => {\n          callback && callback();\n        });\n      },\n      onDestroy(callback) {\n        emitter.addListener('form-unmount', () => {\n          callback && callback();\n        });\n      },\n      validateField(name, groupName) {\n        const field = formState[name];\n        const index = Object.getOwnPropertySymbols(field.data).find(index => {\n          const item = field.data[index];\n          return !groupName || groupName === item.groupName;\n        });\n        if (!index) {\n          console.error(`group[${groupName}]中没有找到字段[${name}]`);\n          return;\n        }\n        emitter.emit('form-field-validate', { name, index });\n      },\n      setFieldValidate({ name, value, groupName, groupIndex }) {\n        emitter.emit('form-data-set-field', {\n          name,\n          value: {\n            groupName,\n            groupIndex,\n            validate: value\n          }\n        });\n      }\n    };\n  }, [emitter, fields, formState, isPass, formData]);\n};\n\nexport default useOpenApi;\n","import { useEffect, useRef } from 'react';\nimport { useFormContext } from '../context';\n\nconst useFieldInit = ({ name, rule, label, interceptor, noTrim, value, id, groupName, groupIndex }) => {\n  const fieldRef = useRef(null);\n  const { formIsMount, emitter } = useFormContext();\n  useEffect(() => {\n    let isEmit = false;\n    if (formIsMount) {\n      isEmit = true;\n      emitter.emit('form-field-add', { name, id });\n    }\n    return () => {\n      isEmit && emitter.emit('form-field-remove', { id });\n    };\n  }, [formIsMount, emitter, name, id]);\n  useEffect(() => {\n    if (formIsMount && groupIndex !== -1) {\n      emitter.emit('form-field-edit', {\n        name,\n        rule,\n        label,\n        interceptor,\n        noTrim,\n        id,\n        groupName,\n        groupIndex,\n        value,\n        fieldRef\n      });\n    }\n  }, [formIsMount, emitter, name, rule, label, interceptor, noTrim, id, groupName, groupIndex, value, fieldRef]);\n  return fieldRef;\n};\n\nexport default useFieldInit;\n","import _get from 'lodash/get';\n\nconst isEvent = event => {\n  return event instanceof window.Event || _get(event, 'nativeEvent') instanceof window.Event || typeof _get(event, 'preventDefault') === 'function';\n};\n\nconst getFieldValue = (event, value) => {\n  if (isEvent(event)) {\n    if (value === undefined) {\n      switch (event.target.type) {\n        case 'checkbox':\n        case 'radio':\n          value = event.target.checked;\n          break;\n        default:\n          value = event.target.value;\n      }\n    }\n  } else {\n    value = event;\n  }\n  return value;\n};\n\nexport default getFieldValue;\n","const compileErrMsg = (errMsg, label) => {\n  return typeof errMsg === 'string' ? errMsg.replace('%s', label) : errMsg(label);\n};\n\nexport default compileErrMsg;\n","import { useMemo } from 'react';\nimport { useGroup } from '../Group';\nimport { useFormContext } from '../context';\nimport uniqueId from 'lodash/uniqueId';\nimport _get from 'lodash/get';\nimport useFieldInit from './useFieldInit';\nimport useValidate from './useValidate';\nimport useFieldDataChange from './useFieldDataChange';\nimport compileErrMsg from './compileErrMsg';\n\nconst useField = ({ name, rule, label, interceptor, noTrim, debounce: time = 0, onChange, value, errMsg, ...args }) => {\n  const _group = useGroup();\n  const groupName = _get(_group, 'name');\n  const groupIndex = _get(_group, 'index');\n  const { formState, formData } = useFormContext();\n  const id = useMemo(() => uniqueId(`${name}_`), [name]);\n  const field = _get(formState, id);\n\n  const fieldRef = useFieldInit({ name, rule, label, interceptor, noTrim, value, id, groupName, groupIndex });\n  const validate = useValidate({ name, id, time });\n  const { isValueChanged, onChange: dataChange } = useFieldDataChange({ name, id, onChange });\n  return {\n    ...args,\n    id,\n    name,\n    label,\n    fieldRef,\n    formData,\n    formState,\n    rule,\n    groupName,\n    groupIndex,\n    onChange: dataChange,\n    isValueChanged,\n    value: _get(field, 'value'),\n    triggerValidate: validate,\n    errState: _get(field, 'validate.status', 0),\n    errMsg: compileErrMsg(errMsg || _get(field, 'validate.msg', ''), label)\n  };\n};\n\nexport default useField;\n","import { useEffect } from 'react';\nimport { useDebouncedCallback } from 'use-debounce';\nimport { useFormContext } from '../context';\n\nconst useValidate = ({ name, id, time }) => {\n  const { emitter } = useFormContext();\n  const checkValidate = () => {\n    emitter.emit('form-field-validate', { name, id });\n  };\n  const { callback: debouncedCheckValidate, cancel } = useDebouncedCallback(checkValidate, time);\n  useEffect(() => {\n    const subscription = emitter.addListener('form-data-reset', cancel);\n    return () => {\n      subscription && subscription.remove();\n    };\n  }, [emitter, cancel]);\n\n  return time ? debouncedCheckValidate : checkValidate;\n};\n\nexport default useValidate;\n","import { useState } from 'react';\nimport getFieldValue from './getFieldValue';\nimport { useFormContext } from '../context';\n\nconst useFieldDataChange = ({ name, id, onChange }) => {\n  const { emitter } = useFormContext();\n  const [isValueChanged, setIsValueChanged] = useState(false);\n  const handlerChange = (...args) => {\n    onChange && onChange(...args);\n    setIsValueChanged(true);\n    const value = getFieldValue(...args);\n    emitter.emit('form-field-data-change', { name, value, id });\n  };\n\n  return {\n    isValueChanged,\n    onChange: handlerChange\n  };\n};\n\nexport default useFieldDataChange;\n","import React, { useState, createContext, useEffect, useCallback, useContext, useImperativeHandle, forwardRef } from 'react';\nimport { useFormContext } from '../context';\nimport Group from './index';\nimport GroupRoot from './GroupRoot';\n\nconst context = createContext({});\n\nconst { Provider } = context;\n\nconst GroupList = forwardRef(({ name, empty, children }, ref) => {\n  const [list, setList] = useState([]);\n  const { initDataRef, emitter } = useFormContext();\n  useEffect(() => {\n    setList(() => {\n      return (Array.isArray(initDataRef.current[name]) ? initDataRef.current[name] : []).map((value, index) => index);\n    });\n    const sub = emitter.addListener('form-data-set', ({ data }) => {\n      setList(() => {\n        return (Array.isArray(data[name]) ? data[name] : []).map((value, index) => index);\n      });\n    });\n    return () => {\n      sub.remove();\n    };\n  }, [emitter, name]);\n\n  const onAdd = useCallback(() => {\n    setList(list => {\n      if (list.length === 0) {\n        return [0];\n      }\n      const newList = list.slice(0);\n      newList.push(list[list.length - 1] + 1);\n      return newList;\n    });\n  }, []);\n\n  const onRemove = useCallback(key => {\n    setList(list => {\n      const index = list.indexOf(key);\n      const newList = list.slice(0);\n      newList.splice(index, 1);\n      return newList;\n    });\n  }, []);\n\n  useImperativeHandle(ref, () => {\n    return {\n      onAdd,\n      onRemove\n    };\n  });\n  return (\n    <GroupRoot>\n      <Provider\n        value={{\n          onAdd,\n          onRemove\n        }}>\n        {list.length === 0\n          ? empty\n          : list.map(key => (\n              <Group key={key} name={name}>\n                {children(key, { onAdd, onRemove })}\n              </Group>\n            ))}\n      </Provider>\n    </GroupRoot>\n  );\n});\n\nGroupList.defaultProps = {\n  empty: null\n};\n\nGroupList.useAction = () => {\n  return useContext(context);\n};\n\nexport default GroupList;\n","import React, { useRef } from 'react';\nimport Form, { useField, useSubmit, GroupList } from '@kne/react-form';\n\nconst Input = props => {\n  const fieldProps = useField(props);\n  return (\n    <>\n      {fieldProps.label}\n      <input ref={fieldProps.fieldRef} type=\"text\" value={fieldProps.value || ''} onChange={fieldProps.onChange} onBlur={fieldProps.triggerValidate} />\n      {fieldProps.errState}\n      {fieldProps.errMsg}\n    </>\n  );\n};\n\nconst SubmitButton = ({ children }) => {\n  const { isLoading, onClick } = useSubmit();\n  return (\n    <button onClick={onClick}>\n      {children}\n      {isLoading ? '正在提交中...' : ''}\n    </button>\n  );\n};\n\nconst Simple = () => {\n  const groupListRef = useRef(null);\n  const groupListRef2 = useRef(null);\n  const formRef = useRef(null);\n  return (\n    <Form\n      debug\n      ref={formRef}\n      rules={{\n        RULE: (value, formData) => {\n          console.log(formData);\n          return {\n            result: true\n          };\n        }\n      }}\n      data={{ abc: [{ field1: '123zzz', field2: '22222', field3: '33333' }, { field2: '23232323' }], field: '' }}\n      onError={error => {\n        console.log(error[0].fieldRef.current);\n      }}\n      onSubmit={(data, args) => {\n        console.log(args);\n        return new Promise(resolve => {\n          setTimeout(() => {\n            console.log(JSON.stringify(data));\n            resolve();\n          }, 1000);\n        });\n      }}>\n      <Input name=\"field\" label=\"字段\" rule=\"REQ LEN-0-10 RULE\" />\n      <div>\n        <button\n          onClick={() => {\n            groupListRef2.current.onAdd();\n          }}>\n          添加\n        </button>\n        <GroupList ref={groupListRef2} name=\"group2\">\n          {(key, { onRemove }) => (\n            <div>\n              <Input name=\"group2\" label=\"字段\" />\n              <button onClick={() => onRemove(key)}>删除</button>\n            </div>\n          )}\n        </GroupList>\n      </div>\n      <div>\n        <button\n          onClick={() => {\n            groupListRef.current.onAdd();\n          }}>\n          添加\n        </button>\n        <GroupList ref={groupListRef} name=\"abc\">\n          {(key, { onRemove }) => (\n            <div>\n              <Input name=\"field\" label=\"字段\" />\n              <Input name=\"field2\" label=\"字段2\" />\n              <Input name=\"field3\" label=\"字段3\" />\n              <button onClick={() => onRemove(key)}>删除</button>\n            </div>\n          )}\n        </GroupList>\n      </div>\n      <SubmitButton>提交</SubmitButton>\n      <button\n        onClick={() => {\n          formRef.current.submit('xxxxxxx', 'aaaaa');\n        }}>\n        点击\n      </button>\n    </Form>\n  );\n};\n\nexport default Simple;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useFormContext } from './context';\n\nconst useSubmit = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const { isPass, emitter } = useFormContext();\n  useEffect(() => {\n    const target = emitter.addListener('form-submit-complete', () => {\n      setIsLoading(false);\n    });\n    return () => {\n      target && target.remove();\n    };\n  }, [emitter]);\n  return {\n    isLoading,\n    isPass,\n    onClick: useCallback(\n      (...args) => {\n        setIsLoading(true);\n        emitter.emit('form-submit', args);\n      },\n      [emitter, setIsLoading]\n    )\n  };\n};\n\nexport default useSubmit;\n","import React from 'react';\nimport Simple from './Example/Simple';\n\nconst App = () => {\n  return <Simple />;\n};\n\nexport default App;\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}