{"version":3,"file":"static/js/96.df1b3abd.chunk.js","mappings":"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","sources":["../../src/context.js","../../src/interceptors.js","../../src/common/stateToIsPass.js","../../src/common/Field.js","../../src/common/ruleValidate.js","../../src/common/TaskQueue.js","../../src/common/getField.js","../../src/useFormEvent/fieldValidateCreator.js","../../src/useFormEvent/validateAllFieldsCreator.js","../../src/useFormEvent/dataSetFieldListCreator.js","../../src/empty.js","../../src/common/compileErrMsg.js","../../src/common/stateToError.js","../../src/useFormEvent/index.js","../../src/useFormEvent/fieldAddCreator.js","../../src/useFormEvent/fieldEditCreator.js","../../src/useFormEvent/fieldRemoveCreator.js","../../src/useFormEvent/fieldDataChangeCreator.js","../../src/useFormEvent/dataSetCreator.js","../../src/useFormEvent/dataResetCreator.js","../../src/useFormEvent/dataSetFieldCreator.js","../../src/useFormEvent/dataSetFieldValidateCreator.js","../../src/useFormEvent/submitCreator.js","../../src/RULES.js","../../src/Group/context.js","../../src/Group/groupKey.js","../../src/Group/GroupRoot.js","../../src/Group/index.js","../../src/Form/index.js","../../src/Form/useFormState.js","../../src/Form/useOpenApi.js","../../src/useField/useFieldInit.js","../../src/useField/getFieldValue.js","../../src/useField/index.js","../../src/useField/useValidate.js","../../src/useField/useFieldDataChange.js","../../src/useReset.js","../../src/useSubmit.js","../../src/Group/GroupList.js","../../src/index.js","../../README.md"],"sourcesContent":["import { createContext, useContext } from 'react';\n\nconst context = createContext({});\n\nexport default context;\nexport const { Provider, Consumer } = context;\nexport const useFormContext = () => useContext(context);\n","import compose from '@kne/compose';\nimport { get as _get, uniqBy as _uniqBy } from 'lodash';\n\nconst interceptors = {\n  input: [], output: []\n};\n\ninterceptors.input.use = (name, func) => {\n  return interceptors.input.push({\n    name, exec: func\n  });\n};\n\ninterceptors.output.use = (name, func) => {\n  return interceptors.output.push({\n    name, exec: func\n  });\n};\n\nexport default interceptors;\n\nconst baseInterceptors = interceptors;\n\nexport const runInterceptors = (interceptors, type, names) => {\n  if (!Array.isArray(names)) {\n    names = [names];\n  }\n\n  const currentInterceptors = _uniqBy(baseInterceptors[type]\n    .concat(_get(interceptors, type, []))\n    .filter(({ name }) => names.indexOf(name) > -1)\n    .reverse(), ({ name }) => name);\n\n  if (currentInterceptors.length === 0) {\n    return value => value;\n  }\n  return compose(...currentInterceptors.map(({ exec }) => exec));\n};\n","const stateToIsPass = (formState) => {\n  return Object.values(formState).every(field => {\n    return field.isPass;\n  });\n};\n\nexport default stateToIsPass;","/**\n * 重新设计form的state，简化验证时执行效率问题\n * state\n * - field\n * - id 唯一性id\n * - name 字段名称 可以支持 company.name 和 company[\"name\"] 格式的 name\n * - groupName 分组的名称 可以支持 company.name 和 company[\"name\"] 格式的 name\n * - groupIndex 分组的Index\n * - label 字段名称\n * - rule 验证规则字符串\n * - interceptor 拦截器\n * - noTrim 是否去掉两端空格\n * - fieldRef 字段引用\n * */\nimport {clone} from 'lodash';\nimport ruleValidate from './ruleValidate';\n\nclass Field {\n  constructor({ id, name }) {\n    this.id = id;\n    this.name = name;\n    this.isPass = false;\n    this.validate = {};\n  }\n\n  setInfo({ groupName, groupIndex, label, rule, interceptor, noTrim, fieldRef, errMsg }) {\n    this.groupName = groupName;\n    this.groupIndex = groupIndex;\n    this.label = label;\n    this.rule = rule;\n    this.interceptor = interceptor;\n    this.noTrim = noTrim;\n    this.fieldRef = fieldRef;\n    this.errMsg = errMsg;\n    return this;\n  }\n\n  deleteValue() {\n    delete this.value;\n    return this;\n  }\n\n  setValue(value) {\n    this.value = value;\n    return this;\n  }\n\n  clone() {\n    return clone(this);\n  }\n\n  setValidateStatus({ status, msg = '', validateData }) {\n    this.validate = {\n      status, msg, validateData: Object.assign({}, this.validate.validateData, validateData)\n    };\n    return this;\n  }\n\n  async runValidate(rules, getFormData) {\n    const validate = await ruleValidate({\n      field: this.clone(), value: this.value, formRules: rules, getFormData\n    });\n    this.isPass = validate.result;\n    this.validate = {\n      status: validate.result === true ? 1 : 2,\n      msg: validate.errMsg,\n      validateData: Object.assign({}, validate.data)\n    };\n    return this;\n  }\n}\n\nexport default Field;\n","const ruleValidate = async ({ field, value, formRules, getFormData }) => {\n  if (typeof field.rule === 'function') {\n    return await field.rule(value, Object.assign({}, { data: getFormData() }, { field }));\n  }\n  if (typeof field.rule === 'object' && field.rule instanceof RegExp) {\n    return {\n      result: field.rule.test(value), errMsg: ''\n    };\n  }\n\n  const data = {};\n\n  if (typeof field.rule === 'string') {\n    const rules = field.rule.split(' ').filter(str => str.length > 0);\n    for (let currentRule of rules) {\n      let [key, ...args] = currentRule.split('-');\n      const exec = formRules[key.toUpperCase()];\n      if (typeof exec === 'function') {\n        //空值处理 如果不为REQ规则的规则REQ判断不通过返回正确\n        if (currentRule !== 'REQ') {\n          const emptyRes = formRules['REQ'](value, ...args, Object.assign({}, { data: getFormData() }, { field }));\n          if (emptyRes.result !== true) {\n            return {\n              result: true, errMsg: '', data\n            };\n          }\n        }\n\n        const res = await exec(value, ...args, Object.assign({}, { data: getFormData() }, { field }));\n\n        Object.assign(data, { [key.toUpperCase()]: res.data });\n\n        if (res.result !== true) {\n          return {\n            result: false, errMsg: res.errMsg, data\n          };\n        }\n      } else {\n        console.error(`校验规则${currentRule}不在当前form的rules里面，请确认${field.name}的校验规则${field.rule}是否正确`);\n      }\n    }\n  }\n  return {\n    result: true, errMsg: '', data\n  };\n};\n\nexport default ruleValidate;\n","export class Task {\n  constructor({ id, runner, complete }) {\n    this.id = id;\n    this.isCancel = false;\n    this.target = Promise.race([\n      Promise.resolve(runner()),\n      new Promise(resolve => {\n        this.resolve = resolve;\n      })\n    ]).then(res => {\n      if (this.isCancel) {\n        return new Promise(() => {\n          // 返回 <pending> 状态的promise对象阻止后续的then回调触发\n        });\n      }\n      return res;\n    });\n    this.target.then((...args) => {\n      return Promise.resolve(complete(...args));\n    });\n  }\n\n  cancel(...args) {\n    if (this.isCancel === true) {\n      return;\n    }\n    this.isCancel = true;\n    this.resolve(...args);\n  }\n}\n\nexport class TaskQueue {\n  constructor() {\n    this.queue = [];\n  }\n\n  append(taskConfig) {\n    const proxyTaskComplete = new Proxy(taskConfig.complete, {\n      apply: (target, thisArg, argumentsList) => {\n        const res = target.apply(thisArg, argumentsList);\n        const index = this.queue.indexOf(task);\n        this.queue.splice(index, 1);\n        return res;\n      }\n    });\n    taskConfig.complete = proxyTaskComplete;\n    const task = new Task(taskConfig);\n\n    const currentTask = this.queue.find(({ id }) => task.id === id);\n    if (currentTask) {\n      const currentIndex = this.queue.indexOf(currentTask);\n      currentTask.cancel();\n      this.queue.splice(currentIndex, 1);\n    }\n    this.queue.push(task);\n  }\n}\n\nexport default TaskQueue;\n","const getField = (formState, token) => {\n  if (token.id) {\n    return formState[token.id];\n  }\n  return token.groupName ? Object.values(formState).find(field => field.name === token.name && field.groupName === token.groupName && field.groupIndex === token.groupIndex) : Object.values(formState).find(field => field.name === token.name);\n};\n\nexport const getGroupFieldList = (formState, token) => {\n  return token.groupName ? Object.values(formState).filter(field => field.name === token.name && field.groupName === token.groupName) : [];\n};\n\nexport default getField;\n","import getField from '../common/getField';\n\nconst fieldValidateCreator = ({ formStateRef, formDataRef, setFormState, otherProps, taskQueue, emitter }) => {\n  const setFieldInfo = field => {\n    field.fieldRef.current && setFormState(Object.assign({}, formStateRef.current, { [field.id]: field }));\n  };\n  return ({ id, name, groupName, groupIndex }) => {\n    const field = getField(formStateRef.current, { id, name, groupName, groupIndex });\n    if (!field) {\n      console.error('未找到要求字段');\n      return;\n    }\n\n    const newField = field.clone();\n    newField.setValidateStatus({ status: 3 });\n    setFieldInfo(newField);\n\n    //处理空格的情况\n    let trimValue = newField.value;\n    if (typeof newField.value === 'string' && newField.noTrim !== true) {\n      trimValue = newField.value.trim();\n      if (newField.value !== trimValue) {\n        newField.setValue(trimValue);\n        emitter.emit('form-field-data-change', { id, value: trimValue });\n      }\n    }\n    //添加任务\n    taskQueue.append({\n      id, runner: () => {\n        return newField.runValidate(otherProps.current.rules, () => formDataRef.current);\n      }, complete: () => {\n        setFieldInfo(newField);\n        emitter.emit('form-field-validate-complete', {\n          id, name: newField.name, value: trimValue, index: newField.groupIndex, validate: newField.validate\n        });\n      }\n    });\n  };\n};\n\nexport default fieldValidateCreator;\n","const validateAllFieldsCreator = ({ formStateRef, taskQueue, emitter }) => (options) => {\n  options = Object.assign({}, options);\n  Object.values(formStateRef.current).forEach(field => {\n    emitter.emit('form-field-validate', { id: field.id });\n  });\n  return Promise.all(taskQueue.queue.map(task => task.target)).then((...args) => options.callback && options.callback({ formState: formStateRef.current }));\n};\n\nexport default validateAllFieldsCreator;\n","import fieldValidateCreator from './fieldValidateCreator';\nimport getField, { getGroupFieldList } from '../common/getField';\nimport { runInterceptors } from '../interceptors';\nimport isNil from 'lodash/isNil';\nimport _last from 'lodash/last';\nimport _set from 'lodash/get';\n\nconst dataSetFieldListCreator = ({\n                                   setFormState, formStateRef, initDataRef, formDataRef, taskQueue, emitter, otherProps\n                                 }) => {\n  const fieldValidate = fieldValidateCreator({\n    formStateRef, formDataRef, setFormState, otherProps, taskQueue, emitter\n  });\n  return (list, options) => {\n    const { runValidate } = Object.assign({}, { runValidate: true }, options);\n    const data = Object.assign({}, formStateRef.current);\n    const validateFieldIdList = [];\n    list.forEach((item) => {\n      const {\n        name, groupName, groupIndex, value, validate, toInitData\n      } = Object.assign({}, { toInitData: false }, item);\n\n      const field = getField(data, { name, groupName, groupIndex });\n\n      if (field) {\n        data[field.id] = field.clone().setValue(runInterceptors(otherProps.current.interceptors, 'input', field.interceptor)(value));\n        validate ? data[field.id].setValidateStatus(validate) : validateFieldIdList.push(field.id);\n        return;\n      }\n\n      if (groupName && isNil(groupIndex)) {\n        const groupFieldList = getGroupFieldList(data, { groupName, name });\n        groupFieldList.forEach((field) => {\n          data[field.id] = field.clone().setValue(runInterceptors(otherProps.current.interceptors, 'input', field.interceptor)(value));\n          validate ? data[field.id].setValidateStatus(validate) : validateFieldIdList.push(field.id);\n        });\n        return;\n      }\n\n      if (toInitData) {\n        if (groupName && _last(groupName.split('.')) === name && !isNil(groupIndex)) {\n          _set(initDataRef.current, `${groupName}[\"${groupIndex}\"]`, value);\n          return;\n        }\n        if (groupName && name && !isNil(groupIndex)) {\n          _set(initDataRef.current, `${groupName}[\"${groupIndex}\"].${name}`, value);\n          return;\n        }\n\n        if (name) {\n          _set(initDataRef.current, name, value);\n          return;\n        }\n      }\n    });\n    setFormState(data);\n    runValidate && validateFieldIdList.forEach((id) => fieldValidate({ id }));\n  };\n};\n\nexport default dataSetFieldListCreator;\n","import { isPlainObject, values as getValues, isArray } from 'lodash';\n\nexport const isNotEmpty = value => {\n  if (isPlainObject(value)) {\n    const values = getValues(value);\n    return values.length > 0 && values.some(item => !!item);\n  } else if (isArray(value)) {\n    return value.length > 0;\n  } else if (typeof value === 'number') {\n    return !isNaN(value);\n  } else {\n    return !(value === undefined || value === null || value === '' || value.length === 0);\n  }\n};\n\nexport const isEmpty = value => !isNotEmpty(value);\n\nexport const filterEmpty = (value = {}) => {\n  if (isArray(value)) {\n    return value.map(item => filterEmpty(item)).filter(isNotEmpty);\n  }\n  if (isPlainObject(value)) {\n    const output = {};\n    Object.keys(value).forEach(key => {\n      const current = filterEmpty(value[key]);\n      if (isNotEmpty(current)) {\n        output[key] = current;\n      }\n    });\n    return output;\n  }\n  return value;\n};\n","const compileErrMsg = (errMsg, label) => {\n  return typeof errMsg === 'string' ? errMsg.replace('%s', label) : errMsg(label);\n};\n\nexport default compileErrMsg;\n","import compileErrMsg from './compileErrMsg';\nimport {get as _get} from 'lodash';\n\nconst stateToError = (formState) => {\n  return Object.values(formState)\n    .filter(field => {\n      return _get(field, 'validate.status') === 2;\n    })\n    .map(field => {\n      return Object.assign({}, field.validate, {\n        name: field.name,\n        label: field.label,\n        groupName: field.groupName,\n        fieldRef: field.fieldRef,\n        groupIndex: field.groupIndex,\n        errMsg: compileErrMsg(field.errMsg || _get(field, 'validate.msg', ''), field.label)\n      });\n    });\n};\n\nexport default stateToError;\n","import { useEffect, useMemo, useRef } from 'react';\nimport useEvent from '@kne/use-event';\nimport fieldAddCreator from './fieldAddCreator';\nimport fieldEditCreator from './fieldEditCreator';\nimport fieldRemoveCreator from './fieldRemoveCreator';\nimport { TaskQueue } from '../common/TaskQueue';\nimport fieldValidateCreator from './fieldValidateCreator';\nimport fieldDataChangeCreator from './fieldDataChangeCreator';\nimport dataSetCreator from './dataSetCreator';\nimport dataResetCreator from './dataResetCreator';\nimport dataSetFieldCreator from './dataSetFieldCreator';\nimport dataSetFieldListCreator from './dataSetFieldListCreator';\nimport submitCreator from './submitCreator';\nimport dataSetFieldValidateCreator from './dataSetFieldValidateCreator';\nimport validateAllFieldsCreator from './validateAllFieldsCreator';\n\nconst usePropsRef = props => {\n  const propsRef = useRef({});\n  Object.keys(props).forEach(name => {\n    propsRef.current[name] = props[name];\n  });\n  return propsRef;\n};\n\nconst useFormEvent = ({\n                        debug, formStateRef, formData, formDataRef, computedIsPassRef, initDataRef, ...props\n                      }) => {\n  const emitter = useEvent({ debug, name: 'react-form' });\n  const emitterRef = useRef(emitter);\n  emitterRef.current = emitter;\n\n  const otherProps = usePropsRef(props);\n  otherProps.current = props;\n\n  useEffect(() => {\n    const emitter = emitterRef.current;\n    const setFormState = otherProps.current.setFormState;\n    const taskQueue = new TaskQueue();\n    emitter.addListener('form-field-add', fieldAddCreator({ formStateRef, setFormState }));\n    emitter.addListener('form-field-edit', fieldEditCreator({ formStateRef, setFormState, initDataRef, otherProps }));\n    emitter.addListener('form-field-remove', fieldRemoveCreator({ formStateRef, setFormState }));\n    emitter.addListener('form-field-validate', fieldValidateCreator({\n      formStateRef, formDataRef, setFormState, otherProps, taskQueue, emitter\n    }));\n    emitter.addListener('form-field-data-change', fieldDataChangeCreator({ formStateRef, setFormState }));\n\n    emitter.addListener('form-data-set', dataSetCreator({\n      setFormState, formStateRef, initDataRef, otherProps, taskQueue, emitter\n    }));\n    emitter.addListener('form-data-reset', dataResetCreator({ initDataRef, setFormState, formStateRef }));\n\n    // 该事件已经废弃目前暂时兼容，后续版本可能会删除\n    emitter.addListener('form-data-set-field', dataSetFieldCreator({\n      setFormState, formStateRef, initDataRef, formDataRef, taskQueue, emitter, otherProps\n    }));\n\n    emitter.addListener('form-data-set-field-list', dataSetFieldListCreator({\n      setFormState, formStateRef, initDataRef, formDataRef, taskQueue, emitter, otherProps\n    }));\n\n    emitter.addListener('form-data-set-field-validate', dataSetFieldValidateCreator({\n      setFormState, formStateRef, emitter\n    }));\n\n    emitter.addListener('form-validate-all', validateAllFieldsCreator({ formStateRef, taskQueue, emitter }));\n    emitter.addListener('form-submit', submitCreator({\n      formStateRef, formDataRef, taskQueue, otherProps, emitter\n    }));\n    return () => {\n      emitter.removeAllListeners();\n    };\n  }, [formStateRef, initDataRef, otherProps]);\n\n  useMemo(() => {\n    emitterRef.current.emit('form-data-change', { data: formData });\n  }, [formData]);\n\n  return emitter;\n};\n\nexport default useFormEvent;\n","import Field from '../common/Field';\n\nconst fieldAddCreator =\n  ({ formStateRef, setFormState }) =>\n  ({ id, name }) => {\n    const field = new Field({ id, name });\n    setFormState(Object.assign({}, formStateRef.current, { [id]: field }));\n  };\n\nexport default fieldAddCreator;\n","import { runInterceptors } from '../interceptors';\nimport { last as _last, get as _get } from 'lodash';\n\nconst fieldEditCreator = ({ formStateRef, setFormState, initDataRef, otherProps }) => ({\n                                                                                         id,\n                                                                                         name,\n                                                                                         rule,\n                                                                                         label,\n                                                                                         interceptor,\n                                                                                         value,\n                                                                                         noTrim,\n                                                                                         groupName,\n                                                                                         groupIndex,\n                                                                                         fieldRef,\n                                                                                         errMsg\n                                                                                       }) => {\n  const field = formStateRef.current[id].clone();\n  field.setInfo({ groupName, groupIndex, label, rule, interceptor, noTrim, fieldRef, errMsg });\n  if (field.value === void 0) {\n    field.setValue(runInterceptors(otherProps.current.interceptors, 'input', interceptor)(value || (() => {\n      if (groupName && _last(groupName.split('.')) === name) {\n        return _get(initDataRef.current, `${groupName}[\"${groupIndex}\"]`);\n      }\n      if (groupName) {\n        return _get(initDataRef.current, `${groupName}[\"${groupIndex}\"].${name}`);\n      }\n      return _get(initDataRef.current, name);\n    })()));\n  }\n\n  setFormState(Object.assign({}, formStateRef.current, { [id]: field }));\n};\n\nexport default fieldEditCreator;\n","const fieldRemoveCreator =\n  ({ formStateRef, setFormState }) =>\n  ({ id }) => {\n    const state = Object.assign({}, formStateRef.current);\n    delete state[id];\n    setFormState(state);\n  };\n\nexport default fieldRemoveCreator;\n","const fieldDataChangeCreator = ({ formStateRef, setFormState }) => {\n  return ({ id, value }) => {\n    if (!formStateRef.current[id]) {\n      return;\n    }\n    const field = formStateRef.current[id].clone();\n    field.setValue(value);\n    field.setValidateStatus({ status: 0 });\n\n    setFormState(Object.assign({}, formStateRef.current, { [id]: field }));\n  };\n};\n\nexport default fieldDataChangeCreator;\n","import { last as _last, get as _get } from 'lodash';\nimport { runInterceptors } from '../interceptors';\nimport validateAllFieldsCreator from './validateAllFieldsCreator';\n\nconst dataSetCreator = ({ setFormState, formStateRef, initDataRef, otherProps, taskQueue, emitter }) => {\n  const validateAllFields = validateAllFieldsCreator({ formStateRef, taskQueue, emitter });\n  return ({ data, runValidate = true }) => {\n    initDataRef.current = data;\n    const output = {};\n    Object.values(Object.assign({}, formStateRef.current)).forEach(field => {\n      const newField = field.clone();\n      const groupName = newField.groupName, targetIndex = newField.groupIndex, name = newField.name;\n      const value = (() => {\n        if (groupName && _last(groupName.split('.')) === name) {\n          return _get(data, `${groupName}[${targetIndex}]`);\n        }\n        if (groupName) {\n          return _get(data, `${groupName}[${targetIndex}].${name}`);\n        }\n        return _get(data, name);\n      })();\n      newField.setValue(runInterceptors(otherProps.current.interceptors, 'input', field.interceptor)(value));\n      output[newField.id] = newField;\n    });\n    setFormState(output);\n    runValidate && validateAllFields();\n  };\n};\n\nexport default dataSetCreator;\n","const dataResetCreator =\n  ({ initDataRef, setFormState, formStateRef }) =>\n  () => {\n    initDataRef.current = {};\n    const data = Object.assign({}, formStateRef.current);\n    const output = {};\n    Object.values(data).forEach(item => {\n      const field = item.clone();\n      field.deleteValue();\n      field.validate = {};\n      output[item.id] = field;\n    });\n    setFormState(output);\n  };\n\nexport default dataResetCreator;\n","import { runInterceptors } from '../interceptors';\nimport fieldValidateCreator from './fieldValidateCreator';\nimport _set from 'lodash/get';\nimport _last from 'lodash/last';\n\nconst dataSetFieldCreator = ({\n                               setFormState,\n                               formStateRef,\n                               initDataRef,\n                               formDataRef,\n                               taskQueue,\n                               emitter,\n                               otherProps\n                             }) => {\n  const fieldValidate = fieldValidateCreator({\n    formStateRef, formDataRef, setFormState, otherProps, taskQueue, emitter\n  });\n  return ({ name, groupName, groupIndex, value, runValidate = true }) => {\n    console.warn('form-data-set-field事件已经废弃目前暂时兼容，后续版本可能会删除,请使用form-data-set-field-list事件代替');\n    const data = Object.assign({}, formStateRef.current);\n    const field = groupName ? Object.values(data).find(field => field.name === name && field.groupName === groupName && field.groupIndex === groupIndex) : Object.values(data).find(field => field.name === name);\n    if (!field) {\n      if (groupName && _last(groupName.split('.')) === name) {\n        _set(initDataRef.current, `${groupName}[\"${groupIndex}\"]`, value);\n        return;\n      }\n      if (groupName) {\n        _set(initDataRef.current, `${groupName}[\"${groupIndex}\"].${name}`, value);\n        return;\n      }\n      _set(initDataRef.current, name, value);\n      return;\n    }\n    data[field.id] = field.clone().setValue(runInterceptors(otherProps.current.interceptors, 'input', field.interceptor)(value));\n    setFormState(data);\n    runValidate && fieldValidate({ id: field.id });\n  };\n};\n\nexport default dataSetFieldCreator;\n","import getField from '../common/getField';\n\nconst dataSetFieldCreator = ({ setFormState, formStateRef, emitter }) => ({\n                                                                            name, groupName, groupIndex, validate\n                                                                          }) => {\n  const data = Object.assign({}, formStateRef.current);\n  const field = getField(data, { name, groupName, groupIndex });\n  if (!field) {\n    console.error('未找到要求字段');\n    return;\n  }\n\n  const newField = field.clone();\n  newField.setValidateStatus(validate);\n  setFormState(Object.assign({}, data, { [newField.id]: newField }));\n  emitter.emit('form-field-validate-complete', {\n    id: newField.id, name: newField.name, value: newField.value, index: newField.groupIndex, validate: newField.validate\n  });\n};\n\nexport default dataSetFieldCreator;\n","import validateAllFieldsCreator from './validateAllFieldsCreator';\nimport { filterEmpty } from '../empty';\nimport stateToError from '../common/stateToError';\nimport stateToIsPass from '../common/stateToIsPass';\n\nconst submitCreator = ({ formStateRef, formDataRef, taskQueue, otherProps, emitter }) => {\n  const validateAllFields = validateAllFieldsCreator({ formStateRef, taskQueue, emitter });\n  return args => {\n    if (!Array.isArray(args)) {\n      args = [args];\n    }\n    const { onPrevSubmit, onError, onComplete, onSubmit, noFilter } = otherProps.current;\n    validateAllFields()\n      .then(async () => {\n        const formState = formStateRef.current;\n        const isPass = stateToIsPass(formState);\n        if (!isPass) {\n          const errors = stateToError(formState);\n          emitter.emit('form-submit-error', errors);\n          onError && (await onError(errors, ...args));\n          return false;\n        }\n        const formData = noFilter === true ? formDataRef.current : filterEmpty(formDataRef.current);\n        emitter.emit('form-prev-submit');\n        if (onPrevSubmit && (await onPrevSubmit(formData, ...args)) === false) {\n          emitter.emit('form-prev-submit-error');\n          return false;\n        }\n        onSubmit && (await onSubmit(formData, ...args));\n        emitter.emit('form-submit-success', formData);\n        return true;\n      })\n      .then(res => {\n        emitter.emit('form-submit-end', res);\n      }, e => {\n        console.error(e);\n        emitter.emit('form-error', e);\n        return onError && (onError(e, ...args));\n      })\n      .then(() => {\n        const formState = formStateRef.current;\n        const isPass = stateToIsPass(formState);\n        const formData = noFilter === true ? formDataRef.current : filterEmpty(formDataRef.current);\n        const errors = stateToError(formState);\n        emitter.emit('form-submit-complete', { formData, isPass, errors });\n        return onComplete && onComplete({ formData, isPass, errors });\n      });\n  };\n};\n\nexport default submitCreator;\n","import { isNotEmpty } from './empty';\n\nconst RULES = {\n  REQ: function (value) {\n    return {\n      result: isNotEmpty(value),\n      errMsg: ''\n    };\n  },\n  TEL: function (value) {\n    return {\n      result: /^1[0-9]{10}$/.test(value),\n      errMsg: '请输入有效的手机号'\n    };\n  },\n  EMAIL: function (value) {\n    return {\n      result: /^([a-zA-Z0-9_.-])+@(([a-zA-Z0-9-])+\\.)+([a-zA-Z0-9]{2,4})+$/.test(value),\n      errMsg: '请输入有效的邮箱'\n    };\n  },\n  LEN: function (value, start, end) {\n    value = value.toString();\n    if (end === start && value.length !== Number(end)) {\n      return {\n        result: false,\n        errMsg: `%s长度必须等于${end}`\n      };\n    }\n    if (value.length < start) {\n      return {\n        result: false,\n        errMsg: `%s长度必须大于${start}`\n      };\n    }\n    if (end && value.length > end) {\n      return {\n        result: false,\n        errMsg: `%s长度必须小于${end}`\n      };\n    }\n    return { result: true };\n  }\n};\nexport default RULES;\nexport const presetRules = (newRules = {}) => {\n  Object.assign(RULES, newRules);\n};\n","import { createContext, useContext } from 'react';\n\nconst context = createContext();\n\nexport const { Provider } = context;\n\nexport const useGroupContext = () => {\n  return useContext(context);\n};\n\nexport default context;\n","const groupKey = (groupId, groupName) => {\n  return `${groupId}@${groupName}`;\n};\n\nexport default groupKey;\n","import React, { useMemo, useEffect, useState } from 'react';\nimport {uniqueId} from 'lodash';\nimport { Provider, useGroupContext } from './context';\nimport { useFormContext } from '../context';\nimport groupKey from './groupKey';\n\nconst GroupRoot = ({ children }) => {\n  const groupId = useMemo(() => uniqueId(`group_`), []);\n  const groupInfo = useGroupContext();\n  const [groupMap, setGroupMap] = useState({});\n  const { emitter } = useFormContext();\n  useEffect(() => {\n    const sub1 = emitter.addListener('form-group-add', ({ id, parentId, name }) => {\n      setGroupMap(oldGroupMap => {\n        const newGroupMap = Object.assign({}, oldGroupMap);\n        const key = groupKey(parentId, name);\n        if (!newGroupMap[key]) {\n          newGroupMap[key] = [];\n        }\n        const newList = newGroupMap[key].slice(0);\n        newList.push(id);\n        newGroupMap[key] = newList;\n        return newGroupMap;\n      });\n    });\n    const sub2 = emitter.addListener('form-group-remove', ({ id, parentId, name }) => {\n      setGroupMap(oldGroupMap => {\n        const newGroupMap = Object.assign({}, oldGroupMap);\n        const key = groupKey(parentId, name);\n        const newList = newGroupMap[key].slice(0);\n        const index = newList.indexOf(id);\n        newList.splice(index, 1);\n        newGroupMap[key] = newList;\n        return newGroupMap;\n      });\n    });\n    return () => {\n      sub1.remove();\n      sub2.remove();\n    };\n  }, [emitter]);\n  return <Provider value={Object.assign({}, groupInfo, { id: groupId, groupMap })}>{children}</Provider>;\n};\n\nexport default GroupRoot;\n","import React, { useEffect, useMemo } from 'react';\nimport { Provider, useGroupContext } from './context';\nimport { useFormContext } from '../context';\nimport { uniqueId, get as _get } from 'lodash';\nimport groupKey from './groupKey';\n\nconst Group = ({ name, children }) => {\n  const { formIsMount, emitter } = useFormContext();\n  const groupId = useMemo(() => uniqueId(`group_`), []);\n  const { id: parentId, index: parentIndex, groupMap, name: parentName } = useGroupContext();\n\n  const index = useMemo(() => {\n    return _get(groupMap, groupKey(parentId, name), []).indexOf(groupId);\n  }, [groupId, parentId, groupMap, name]);\n\n  const groupName = useMemo(() => {\n    if (index > -1 && parentName) {\n      return `${parentName}[${parentIndex}].${name}`;\n    }\n    return name;\n  }, [parentName, name, index, parentIndex]);\n\n  useEffect(() => {\n    let isEmit = false;\n    if (formIsMount) {\n      isEmit = true;\n      emitter.emit('form-group-add', { id: groupId, parentId, name });\n    }\n    return () => {\n      isEmit && emitter.emit('form-group-remove', { id: groupId, parentId, name });\n    };\n  }, [formIsMount, emitter, groupId, parentId, name]);\n  return <Provider value={{ id: groupId, name: groupName, groupMap, index }}>{children}</Provider>;\n};\n\nexport default Group;\n\nexport { default as GroupRoot } from './GroupRoot';\n\nexport const useGroup = useGroupContext;\n","import React, { forwardRef, useRef, useState, useEffect, useImperativeHandle } from 'react';\nimport { Provider } from '../context';\nimport useFormState from './useFormState';\nimport useFormEvent from '../useFormEvent';\nimport useOpenApi from './useOpenApi';\nimport RULES from '../RULES';\nimport { GroupRoot } from '../Group';\n\nconst Form = forwardRef((props, ref) => {\n  const {\n    formState, formStateRef, formData, fields, isPass, isPassRef, formDataRef, setFormState\n  } = useFormState(props);\n  const initDataRef = useRef(props.data);\n\n  const [formIsMount, setFormIsMount] = useState(false);\n  const formRules = Object.assign({}, RULES, props.rules);\n  const emitter = useFormEvent({\n    onPrevSubmit: props.onPrevSubmit,\n    rules: formRules,\n    interceptors: props.interceptors,\n    noFilter: props.noFilter,\n    onError: props.onError,\n    onSubmit: props.onSubmit,\n    debug: props.debug,\n    formState,\n    formStateRef,\n    formData,\n    isPassRef,\n    formDataRef,\n    setFormState,\n    initDataRef\n  });\n  const emitterRef = useRef(emitter);\n  emitterRef.current = emitter;\n\n  useEffect(() => {\n    setFormIsMount(true);\n    initDataRef.current && emitterRef.current.emit('form-data-set', { data: initDataRef.current });\n    emitterRef.current.emit('form-mount');\n    return () => {\n      emitterRef.current.emit('form-unmount');\n    };\n  }, []);\n\n  const openApi = useOpenApi({ emitter, fields, formState, setFormState, formData, isPass });\n  useImperativeHandle(ref, () => openApi, [openApi]);\n\n  return (<Provider\n    value={{\n      formState, formData, setFormState, emitter, fields, isPass, formIsMount, initDataRef, openApi\n    }}>\n    <GroupRoot>{props.children}</GroupRoot>\n  </Provider>);\n});\n\nForm.defaultProps = {\n  data: {}, debug: false, rules: {}, interceptors: {}\n};\n\nexport default Form;\n","import { useState, useRef, useMemo } from 'react';\nimport { set, last as _last } from 'lodash';\nimport { runInterceptors } from '../interceptors';\nimport stateToIsPass from '../common/stateToIsPass';\n\nconst useFormState = props => {\n  const [state, setState] = useState({});\n  const formStateRef = useRef({});\n  formStateRef.current = state;\n\n  const propsRef = useRef({});\n  propsRef.current = props;\n\n  const fields = useMemo(() => {\n    return Object.values(state).map(item => {\n      return {\n        field: item.fieldRef, label: item.label, name: item.name, rule: item.rule\n      };\n    });\n  }, [state]);\n  const isPass = useMemo(() => {\n    return stateToIsPass(state);\n  }, [state]);\n  const formData = useMemo(() => {\n    const output = {};\n    Object.values(state).forEach(field => {\n      if (!field.name) {\n        return;\n      }\n      const fieldValue = runInterceptors(propsRef.current.interceptors, 'output', field.interceptor)(field.value);\n      if (field.groupName && _last(field.groupName.split('.')) === field.name) {\n        set(output, `${field.groupName}[${field.groupIndex}]`, fieldValue);\n        return;\n      }\n      if (field.groupName) {\n        set(output, `${field.groupName}[${field.groupIndex}].${field.name}`, fieldValue);\n        return;\n      }\n      set(output, field.name, fieldValue);\n    });\n    return output;\n  }, [state]);\n  const formDataRef = useRef({});\n  formDataRef.current = formData;\n  return {\n    fields, isPass, formData, formDataRef, formState: state, formStateRef: formStateRef, setFormState: state => {\n      formStateRef.current = state;\n      setState(state);\n    }\n  };\n};\n\nexport default useFormState;\n","import { useMemo } from 'react';\nimport stateToError from '../common/stateToError';\nimport stateToIsPass from '../common/stateToIsPass';\n\nconst useOpenApi = ({ emitter, fields, formState, formData, isPass }) => {\n  return useMemo(() => {\n    return {\n      emitter, submit: (...args) => {\n        emitter.emit('form-submit', args);\n      }, get isPass() {\n        return isPass;\n      }, get data() {\n        return formData;\n      }, get fields() {\n        return fields;\n      }, get formState() {\n        return formState;\n      }, set data(data) {\n        emitter.emit('form-data-set', { data });\n      }, get errors() {\n        return stateToError(formState);\n      }, reset() {\n        emitter.emit('form-data-reset');\n      }, onReady(callback) {\n        emitter.addListener('form-mount', () => {\n          callback && callback();\n        });\n      }, onDestroy(callback) {\n        emitter.addListener('form-unmount', () => {\n          callback && callback();\n        });\n      }, validateField({ name, groupName, groupIndex }) {\n        emitter.emit('form-field-validate', { name, groupName, groupIndex });\n      }, validateAll() {\n        return new Promise((resolve) => {\n          emitter.emit('form-validate-all', {\n            callback: ({ formState }) => {\n              resolve({\n                isPass: stateToIsPass(formState), errors: stateToError(formState)\n              });\n            }\n          });\n        });\n      }, setFormData: (data, runValidate = true) => {\n        emitter.emit('form-data-set', { data, runValidate });\n      }, getFormData() {\n        return formData;\n      }, setFieldValidate({ name, validate, groupName, groupIndex }) {\n        emitter.emit('form-data-set-field-validate', { name, groupName, groupIndex, validate });\n      }, setField({ name, value, groupName, groupIndex, validate, runValidate = true }) {\n        emitter.emit('form-data-set-field-list', [{ name, groupName, groupIndex, value, validate }], { runValidate });\n      }, setFields(list, options) {\n        emitter.emit('form-data-set-field-list', list, options);\n      }\n    };\n  }, [emitter, fields, formState, isPass, formData]);\n};\n\nexport default useOpenApi;\n","import { useEffect, useRef } from 'react';\nimport { useFormContext } from '../context';\n\nconst useFieldInit = ({ name, rule, label, interceptor, noTrim, value, id, groupName, groupIndex, errMsg }) => {\n  const fieldRef = useRef(null);\n  const { formIsMount, emitter } = useFormContext();\n  useEffect(() => {\n    let isEmit = false;\n    if (formIsMount) {\n      isEmit = true;\n      emitter.emit('form-field-add', { name, id });\n    }\n    return () => {\n      isEmit && emitter.emit('form-field-remove', { id });\n    };\n  }, [formIsMount, emitter, name, id]);\n  useEffect(() => {\n    if (formIsMount && groupIndex !== -1) {\n      emitter.emit('form-field-edit', {\n        name, rule, label, interceptor, noTrim, id, groupName, groupIndex, value, fieldRef, errMsg\n      });\n    }\n  }, [formIsMount, emitter, name, rule, label, interceptor, noTrim, id, groupName, groupIndex, value, fieldRef, errMsg]);\n  return fieldRef;\n};\n\nexport default useFieldInit;\n","import {get as _get} from 'lodash';\n\nconst isEvent = event => {\n  return window.Event && (event instanceof window.Event || _get(event, 'nativeEvent') instanceof window.Event || typeof _get(event, 'preventDefault') === 'function');\n};\n\nconst getFieldValue = (event, value) => {\n  if (isEvent(event)) {\n    if (value === undefined) {\n      switch (event.target.type) {\n        case 'checkbox':\n        case 'radio':\n          value = event.target.checked;\n          break;\n        default:\n          value = event.target.value;\n      }\n    }\n  } else {\n    value = event;\n  }\n  return value;\n};\n\nexport default getFieldValue;\n","import { useMemo } from 'react';\nimport { useGroup } from '../Group';\nimport { useFormContext } from '../context';\nimport { uniqueId, get as _get } from 'lodash';\nimport useFieldInit from './useFieldInit';\nimport useValidate from './useValidate';\nimport useFieldDataChange from './useFieldDataChange';\nimport compileErrMsg from '../common/compileErrMsg';\n\nconst useField = ({ name, rule, label, interceptor, noTrim, debounce: time = 0, onChange, value, errMsg, ...args }) => {\n  const _group = useGroup();\n  const groupName = _get(_group, 'name');\n  const groupIndex = _get(_group, 'index');\n  const { formState, formData } = useFormContext();\n  const id = useMemo(() => uniqueId(`${name}_`), [name]);\n  const field = _get(formState, id);\n\n  const fieldRef = useFieldInit({ name, rule, label, interceptor, noTrim, value, id, groupName, groupIndex, errMsg });\n  const validate = useValidate({ name, id, time });\n  const { isValueChanged, onChange: dataChange } = useFieldDataChange({ name, id, onChange });\n  return {\n    ...args,\n    id,\n    name,\n    label,\n    fieldRef,\n    formData,\n    formState,\n    rule,\n    groupName,\n    groupIndex,\n    onChange: dataChange,\n    isValueChanged,\n    value: _get(field, 'value'),\n    triggerValidate: validate,\n    errState: _get(field, 'validate.status', 0),\n    errMsg: compileErrMsg(errMsg || _get(field, 'validate.msg', ''), label)\n  };\n};\n\nexport default useField;\n","import { useEffect } from 'react';\nimport { useDebouncedCallback } from 'use-debounce';\nimport { useFormContext } from '../context';\n\nconst useValidate = ({ name, id, time }) => {\n  const { formIsMount, emitter } = useFormContext();\n  const checkValidate = () => {\n    formIsMount && emitter.emit('form-field-validate', { name, id });\n  };\n  const debouncedCheckValidate = useDebouncedCallback(checkValidate, time),cancel = debouncedCheckValidate.cancel;\n  useEffect(() => {\n    const subscription = emitter.addListener('form-data-reset', cancel);\n    return () => {\n      subscription && subscription.remove();\n    };\n  }, [emitter, cancel]);\n\n  return time ? debouncedCheckValidate : checkValidate;\n};\n\nexport default useValidate;\n","import { useState } from 'react';\nimport getFieldValue from './getFieldValue';\nimport { useFormContext } from '../context';\n\nconst useFieldDataChange = ({ name, id, onChange }) => {\n  const { emitter } = useFormContext();\n  const [isValueChanged, setIsValueChanged] = useState(false);\n  const handlerChange = (...args) => {\n    onChange && onChange(...args);\n    setIsValueChanged(true);\n    const value = getFieldValue(...args);\n    emitter.emit('form-field-data-change', { name, value, id });\n  };\n\n  return {\n    isValueChanged,\n    onChange: handlerChange\n  };\n};\n\nexport default useFieldDataChange;\n","import { useCallback } from 'react';\nimport { useFormContext } from './context';\n\nconst useReset = () => {\n  const { emitter } = useFormContext();\n  return {\n    onClick: useCallback(() => {\n      emitter.emit('form-data-reset');\n    }, [emitter])\n  };\n};\n\nexport default useReset;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useFormContext } from './context';\n\nconst useSubmit = (props) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const { isPass, emitter } = useFormContext();\n  const { onClick } = Object.assign({}, props);\n  useEffect(() => {\n    const target = emitter.addListener('form-submit-complete', () => {\n      setIsLoading(false);\n    });\n    return () => {\n      target && target.remove();\n    };\n  }, [emitter]);\n  return {\n    isLoading, isPass, onClick: useCallback((...args) => {\n      setIsLoading(true);\n      setTimeout(() => {\n        Promise.resolve(onClick && onClick(...args)).then((returnArgs) => {\n          emitter.emit('form-submit', returnArgs || args);\n        }, () => {\n          setIsLoading(false);\n        });\n      }, 0);\n    }, [emitter, setIsLoading])\n  };\n};\n\nexport default useSubmit;\n","import React, {\n  useState, useRef, useMemo, createContext, useEffect, useCallback, useContext, useImperativeHandle, forwardRef\n} from 'react';\nimport { useFormContext } from '../context';\nimport Group from './index';\nimport { useGroupContext } from './context';\nimport { get, last, range } from 'lodash';\n\nconst context = createContext({});\n\nconst { Provider } = context;\n\nconst GroupItem = ({ children }) => {\n  const { index } = useGroupContext();\n  return children({ index });\n};\n\nconst GroupList = forwardRef(({ name, defaultLength, empty, children }, ref) => {\n  const [list, setList] = useState([]);\n  const { initDataRef, emitter } = useFormContext();\n  const groupInfo = useGroupContext() || {};\n  const { name: parentName, index: parentIndex } = groupInfo;\n  const groupName = useMemo(() => {\n    if (parentIndex > -1 && parentName) {\n      return `${parentName}[${parentIndex}]`;\n    }\n    return '';\n  }, [parentName, parentIndex]);\n  const groupInfoRef = useRef(groupInfo);\n  groupInfoRef.current = groupInfo;\n  const dataRouter = useRef();\n  dataRouter.current = groupName ? `${groupName}.${name}` : name;\n  const defaultLengthRef = useRef(defaultLength);\n  useEffect(() => {\n    const setValueCallback = (value) => {\n      const parentId = groupInfoRef.current.id;\n      const mapCallback = (value, index) => parentId ? `${parentId}-${index}` : index;\n      if (Number.isInteger(defaultLengthRef.current) && defaultLengthRef.current > 0 && !(Array.isArray(value) && value.length >= defaultLengthRef.current)) {\n        return range(0, defaultLengthRef.current).map(mapCallback);\n      }\n      if (Array.isArray(value)) {\n        return value.map(mapCallback);\n      }\n      return [];\n    };\n    setList(() => {\n      const value = get(initDataRef.current, groupName ? `${groupName}.${name}` : name);\n      return setValueCallback(value);\n    });\n    const sub = emitter.addListener('form-data-set', ({ data }) => {\n      setList(() => {\n        const value = get(data, groupName ? `${groupName}.${name}` : name);\n        return setValueCallback(value);\n      });\n    });\n    return () => {\n      sub.remove();\n    };\n  }, [emitter, groupName, name]);\n\n  const onAdd = useCallback((options) => {\n    const { isUnshift } = Object.assign({}, options);\n    const parentId = groupInfoRef.current.id;\n    setList(list => {\n      if (list.length === 0) {\n        return [`${parentId}-0`];\n      }\n      const newList = list.slice(0);\n      const index = Math.max(parseInt(last(list[0].split('-'))), parseInt(last(last(list).split('-')))) + 1;\n      newList[isUnshift ? 'unshift' : 'push'](parentId ? `${parentId}-${index}` : index);\n      return newList;\n    });\n  }, []);\n\n  const onRemove = useCallback(key => {\n    setList(list => {\n      const index = list.indexOf(key);\n      const target = get(initDataRef.current, dataRouter.current);\n      if (Array.isArray(target)) {\n        target.splice(index, 1);\n      }\n      const newList = list.slice(0);\n      newList.splice(index, 1);\n      return newList;\n    });\n  }, []);\n\n  useImperativeHandle(ref, () => {\n    return {\n      onAdd, onRemove\n    };\n  });\n  return <Provider\n    value={{\n      onAdd, onRemove\n    }}>\n    {list.length === 0 ? empty : list.map((key) => (<Group key={key} name={name}>\n      <GroupItem>{({ index }) => children(key, {\n        index, length: list.length, onAdd, onRemove: () => onRemove(key)\n      })}</GroupItem>\n    </Group>))}\n  </Provider>;\n});\n\nGroupList.defaultProps = {\n  empty: null\n};\n\nGroupList.useAction = () => {\n  return useContext(context);\n};\n\nexport default GroupList;\n","import Form from './Form';\nimport { isNotEmpty, isEmpty, filterEmpty } from './empty';\nimport stateToIsPass from './common/stateToIsPass';\nimport stateToError from './common/stateToError';\nimport compileErrMsg from './common/compileErrMsg';\nimport getField from './common/getField';\n\nexport default Form;\nexport { default as Form } from './Form';\nexport { default as useField } from './useField';\nexport { default as useReset } from './useReset';\nexport { default as useSubmit } from './useSubmit';\nexport { default as Group, useGroup } from './Group';\nexport { default as GroupList } from './Group/GroupList';\nexport { useFormContext } from './context';\nexport { presetRules as preset, default as RULES } from './RULES';\nexport { default as interceptors } from './interceptors';\n\n// 命名不规范已经废弃\nexport const util = {\n  isNotEmpty, isEmpty, filterEmpty, stateToIsPass, stateToError, compileErrMsg, getField\n};\n\nexport const formUtils = util;\n","import * as component_1 from '@kne/react-form';\nconst readmeConfig = {\n    name: `react-form`,\n    summary: `<h1>ReactForm</h1>\n<p>用于表单验证</p>`,\n    api: ``,\n    example: {\n        isFull: false,\n        className: `react_form_5f21f`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: Form, useField, useSubmit, useReset } = reactForm;\n\nconst Input = props => {\n  const fieldProps = useField(props);\n  return (<div>\n    {fieldProps.label}\n    <input ref={fieldProps.fieldRef} type='text' value={fieldProps.value || ''} onChange={fieldProps.onChange}\n           onBlur={fieldProps.triggerValidate} />\n    {fieldProps.errState}\n    {fieldProps.errMsg}\n  </div>);\n};\n\nconst SubmitButton = ({ children }) => {\n  const { isLoading, onClick } = useSubmit();\n  return (<button onClick={onClick}>\n    {children}\n    {isLoading ? '正在提交中...' : ''}\n  </button>);\n};\n\nconst ResetButton = () => {\n  const { onClick } = useReset();\n  return <button onClick={onClick}>重置</button>;\n};\n\nconst Example = ()=>{\n  return <Form>\n    <Input name=\"name\" label=\"名称\" rule=\"REQ LEN-0-10\"/>\n    <div>\n      <SubmitButton>提交</SubmitButton>\n      <ResetButton>重置</ResetButton>\n    </div>\n  </Form>\n};\n\nrender(<Example />);\n\n`,\n    scope: [{\n    name: \"reactForm\",\n    packageName: \"@kne/react-form\",\n    component: component_1\n}]\n}]\n    }\n};\nexport default readmeConfig;\n"],"names":["context$2","createContext","Provider$2","Consumer","useFormContext","useContext","interceptors","input","output","use","name","func","push","exec","baseInterceptors","runInterceptors","type","names","Array","isArray","currentInterceptors","uniqBy","concat","get","filter","_ref2","indexOf","reverse","_ref3","length","value","compose","map","_ref4","stateToIsPass","formState","Object","values","every","field","isPass","Field","constructor","_ref6","id","this","validate","setInfo","_ref7","groupName","groupIndex","label","rule","interceptor","noTrim","fieldRef","errMsg","deleteValue","setValue","clone","setValidateStatus","_ref8","status","msg","validateData","assign","runValidate","rules","getFormData","async","formRules","_ref5","data","RegExp","result","test","split","str","currentRule","key","args","toUpperCase","res","console","error","ruleValidate","Task","_ref15","runner","complete","isCancel","target","Promise","race","resolve","then","arguments","cancel","TaskQueue","queue","append","taskConfig","proxyTaskComplete","Proxy","apply","thisArg","argumentsList","index","task","splice","currentTask","find","_ref16","currentIndex","getField","token","fieldValidateCreator","_ref17","formStateRef","formDataRef","setFormState","otherProps","taskQueue","emitter","setFieldInfo","current","_ref18","newField","trimValue","trim","emit","validateAllFieldsCreator","_ref21","options","forEach","all","callback","dataSetFieldListCreator","_ref27","initDataRef","fieldValidate","list","validateFieldIdList","item","toInitData","isNil","groupFieldList","getGroupFieldList","_last","_set","isNotEmpty","isPlainObject","values$1","some","isNaN","undefined","filterEmpty","keys","compileErrMsg","replace","stateToError","useFormEvent","_ref","debug","formData","props","_objectWithoutPropertiesLoose","_excluded$1","useEvent","emitterRef","useRef","propsRef","usePropsRef","useEffect","addListener","_ref9","_ref10","fieldAddCreator","_ref11","_ref12","last","fieldEditCreator","_ref13","_ref14","state","fieldRemoveCreator","_ref19","_ref20","fieldDataChangeCreator","_ref22","validateAllFields","_ref23","_runValidate","targetIndex","dataSetCreator","_ref24","dataResetCreator","_ref25","_ref26","warn","dataSetFieldCreator$1","_ref29","_ref30","dataSetFieldCreator","_ref28","onPrevSubmit","onError","onComplete","onSubmit","noFilter","errors","e","submitCreator","removeAllListeners","useMemo","RULES","REQ","TEL","EMAIL","LEN","start","end","toString","Number","presetRules","newRules","context$1","Provider","Provider$1","useGroupContext","groupKey","groupId","GroupRoot","_ref36","children","uniqueId","groupInfo","groupMap","setGroupMap","useState","sub1","_ref37","parentId","oldGroupMap","newGroupMap","newList","slice","sub2","_ref38","remove","React","Group","_ref39","formIsMount","parentIndex","parentName","isEmit","useGroup","Form","forwardRef","ref","fields","isPassRef","setState","fieldValue","set","useFormState","setFormIsMount","openApi","_ref31","submit","_len","_key","reset","onReady","onDestroy","validateField","_ref32","validateAll","_ref33","setFormData","setFieldValidate","_ref34","setField","_ref35","setFields","useOpenApi","useImperativeHandle","defaultProps","getFieldValue","event","window","Event","isEvent","checked","useField","debounce","time","onChange","_excluded","_group","_ref40","useFieldInit","_ref41","checkValidate","debouncedCheckValidate","useDebouncedCallback","subscription","useValidate","isValueChanged","dataChange","_ref42","setIsValueChanged","useFieldDataChange","_extends","triggerValidate","errState","useReset","onClick","useCallback","useSubmit","isLoading","setIsLoading","_len2","_key2","setTimeout","returnArgs","context","GroupItem","_ref43","GroupList","_ref44","defaultLength","empty","setList","groupInfoRef","dataRouter","defaultLengthRef","setValueCallback","mapCallback","isInteger","range","sub","_ref45","onAdd","isUnshift","Math","max","parseInt","onRemove","_ref46","useAction","util","isEmpty","formUtils","summary","api","example","isFull","className","style","title","description","code","scope","packageName","component"],"sourceRoot":""}